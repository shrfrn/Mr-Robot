{"version":3,"sources":["cmps/ContactPreview.jsx","cmps/ContactList.jsx","cmps/ContactFilter.jsx","cmps/Header.jsx","services/contact.service.js","store/actions/contactActions.js","pages/MisterBitcoin.jsx","pages/ContactDetails.jsx","pages/EditContact.jsx","App.js","reportWebVitals.js","store/reducers/contactReducer.js","store/index.js","index.js"],"names":["ContactPreview","contact","onSelectContact","className","to","_id","src","alt","name","ContactList","contacts","map","onClick","ContactFilter","state","email","phone","handleChange","target","field","id","value","type","setState","props","onChangeFilter","htmlFor","onChange","this","Component","Header","connect","filterBy","contactModule","loadContacts","setFilterBy","contactService","getContacts","regex","RegExp","Promise","resolve","reject","contactsToReturn","_filter","sort","getContactById","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","arr","a","b","toLocaleLowerCase","filteredContacts","filter","test","contactId","dispatch","_MisterBitcoin","console","log","React","mapDispatchToProps","getState","MisterBitcoin","_ContactDetails","goBack","history","editContact","match","params","removeContact","ContactDetails","currContact","_EditContact","prevState","ev","preventDefault","updateContact","addContact","newContact","imgUrl","updatedContact","EditContact","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4833aa0.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\n\nexport default function ContactPreview({ contact, onSelectContact }) {\n\n    return (\n        <article className=\"contact-preview\">\n            <Link to = { '/contact/' + contact._id }>\n                <img src={ 'http://robohash.org/' + contact._id } alt=\"\" />\n                <p>{contact.name}</p>\n            </Link>\n        </article>\n    )\n}","import React from \"react\";\nimport ContactPreview from \"./ContactPreview\";\n\nexport default function ContactList({ contacts, onSelectContact }) {\n    return (\n        contacts.map(contact => \n            <ContactPreview \n                key={contact._id}   \n                contact={ contact }\n                onClick={ () => onSelectContact(contact) }/>)\n    )\n}","import { Component } from 'react'\n\nexport class ContactFilter extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n    }\n\n    handleChange = ({ target }) => {\n        var field = target.id\n        var value = target.type === 'number' ? +target.value : target.value\n     \n        this.setState({ [field]: value }, () => {\n            this.props.onChangeFilter(this.state)\n        })\n    }\n\n    render() {\n        return (\n        <section className=\"filter-section\">\n            <p>Filter</p>\n            <form className=\"contact-filter\">\n                <label htmlFor=\"name\">name</label>\n                <input type=\"text\" id=\"name\" onChange={this.handleChange} />\n                \n\n                <label htmlFor=\"email\">email</label>\n                <input type=\"text\" id=\"email\" onChange={this.handleChange} />\n                \n\n                <label htmlFor=\"phone\">phone</label>\n                <input type=\"text\" id=\"phone\" onChange={this.handleChange} />\n                \n            </form>\n        </section>\n        )\n    }\n}","import { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { ContactFilter } from './ContactFilter.jsx'\n\nfunction _Header({ loadContacts, setFilterBy }) {\n\n    function onChangeFilter(filterBy){\n        setFilterBy(filterBy)\n        loadContacts(filterBy)\n    }\n\n    return (\n        <nav className=\"header\">\n            <h1>Mr. Robot</h1>\n            <ContactFilter onChangeFilter = { onChangeFilter }/>\n            <Link to='/edit/'>\n                <button>+</button>\n            </Link>\n        </nav>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        filterBy: state.contactModule.filterBy\n    //   loggedInUser: state.userModule.loggedInUser\n    }\n}\n//   export const Header = connect(mapStateToProps)(withRouter(_Header))\nexport const Header = connect(mapStateToProps)(_Header)  ","export const contactService = {\n    getContacts,\n    getContactById,\n    deleteContact,\n    saveContact,\n    getEmptyContact\n}\n  \n  \n  \n  const contacts = [\n    {\n      \"_id\": \"5a56640269f443a5d64b32ca\",\n      \"name\": \"Ochoa Hyde\",\n      \"email\": \"ochoahyde@renovize.com\",\n      \"phone\": \"+1 (968) 593-3824\"\n    },\n    {\n      \"_id\": \"5a5664025f6ae9aa24a99fde\",\n      \"name\": \"Hallie Mclean\",\n      \"email\": \"halliemclean@renovize.com\",\n      \"phone\": \"+1 (948) 464-2888\"\n    },\n    {\n      \"_id\": \"5a56640252d6acddd183d319\",\n      \"name\": \"Parsons Norris\",\n      \"email\": \"parsonsnorris@renovize.com\",\n      \"phone\": \"+1 (958) 502-3495\"\n    },\n    {\n      \"_id\": \"5a566402ed1cf349f0b47b4d\",\n      \"name\": \"Rachel Lowe\",\n      \"email\": \"rachellowe@renovize.com\",\n      \"phone\": \"+1 (911) 475-2312\"\n    },\n    {\n      \"_id\": \"5a566402abce24c6bfe4699d\",\n      \"name\": \"Dominique Soto\",\n      \"email\": \"dominiquesoto@renovize.com\",\n      \"phone\": \"+1 (807) 551-3258\"\n    },\n    {\n      \"_id\": \"5a566402a6499c1d4da9220a\",\n      \"name\": \"Shana Pope\",\n      \"email\": \"shanapope@renovize.com\",\n      \"phone\": \"+1 (970) 527-3082\"\n    },\n    {\n      \"_id\": \"5a566402f90ae30e97f990db\",\n      \"name\": \"Faulkner Flores\",\n      \"email\": \"faulknerflores@renovize.com\",\n      \"phone\": \"+1 (952) 501-2678\"\n    },\n    {\n      \"_id\": \"5a5664027bae84ef280ffbdf\",\n      \"name\": \"Holder Bean\",\n      \"email\": \"holderbean@renovize.com\",\n      \"phone\": \"+1 (989) 503-2663\"\n    },\n    {\n      \"_id\": \"5a566402e3b846c5f6aec652\",\n      \"name\": \"Rosanne Shelton\",\n      \"email\": \"rosanneshelton@renovize.com\",\n      \"phone\": \"+1 (968) 454-3851\"\n    },\n    {\n      \"_id\": \"5a56640272c7dcdf59c3d411\",\n      \"name\": \"Pamela Nolan\",\n      \"email\": \"pamelanolan@renovize.com\",\n      \"phone\": \"+1 (986) 545-2166\"\n    },\n    {\n      \"_id\": \"5a5664029a8dd82a6178b15f\",\n      \"name\": \"Roy Cantu\",\n      \"email\": \"roycantu@renovize.com\",\n      \"phone\": \"+1 (929) 571-2295\"\n    },\n    {\n      \"_id\": \"5a5664028c096d08eeb13a8a\",\n      \"name\": \"Ollie Christian\",\n      \"email\": \"olliechristian@renovize.com\",\n      \"phone\": \"+1 (977) 419-3550\"\n    },\n    {\n      \"_id\": \"5a5664026c53582bb9ebe9d1\",\n      \"name\": \"Nguyen Walls\",\n      \"email\": \"nguyenwalls@renovize.com\",\n      \"phone\": \"+1 (963) 471-3181\"\n    },\n    {\n      \"_id\": \"5a56640298ab77236845b82b\",\n  \n      \"name\": \"Glenna Santana\",\n      \"email\": \"glennasantana@renovize.com\",\n      \"phone\": \"+1 (860) 467-2376\"\n    },\n    {\n      \"_id\": \"5a56640208fba3e8ecb97305\",\n      \"name\": \"Malone Clark\",\n      \"email\": \"maloneclark@renovize.com\",\n      \"phone\": \"+1 (818) 565-2557\"\n    },\n    {\n      \"_id\": \"5a566402abb3146207bc4ec5\",\n      \"name\": \"Floyd Rutledge\",\n      \"email\": \"floydrutledge@renovize.com\",\n      \"phone\": \"+1 (807) 597-3629\"\n    },\n    {\n      \"_id\": \"5a56640298500fead8cb1ee5\",\n      \"name\": \"Grace James\",\n      \"email\": \"gracejames@renovize.com\",\n      \"phone\": \"+1 (959) 525-2529\"\n    },\n    {\n      \"_id\": \"5a56640243427b8f8445231e\",\n      \"name\": \"Tanner Gates\",\n      \"email\": \"tannergates@renovize.com\",\n      \"phone\": \"+1 (978) 591-2291\"\n    },\n    {\n      \"_id\": \"5a5664025c3abdad6f5e098c\",\n      \"name\": \"Lilly Conner\",\n      \"email\": \"lillyconner@renovize.com\",\n      \"phone\": \"+1 (842) 587-3812\"\n    }\n  ];\n  \n  function sort(arr) {\n    return arr.sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      }\n  \n      return 0;\n    })\n  }\n  \nfunction getContacts(filterBy = null) {\n\n    const regex = {\n        name: (filterBy?.name) ? new RegExp(filterBy.name, 'i') : null,\n        email: (filterBy?.email) ? new RegExp(filterBy.email, 'i') : null,\n        phone: (filterBy?.phone) ? new RegExp(filterBy.phone, 'i') : null,\n    }\n\n    return new Promise((resolve, reject) => {\n        let contactsToReturn = contacts\n        if (regex.name || regex.email || regex.phone) {\n            contactsToReturn = _filter(regex)\n        }\n        resolve(sort(contactsToReturn))\n    })\n}\n  \n  function getContactById(id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find(contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n  }\n  \n  function deleteContact(id) {\n    return new Promise((resolve, reject) => {\n      const index = contacts.findIndex(contact => contact._id === id)\n      if (index !== -1) {\n        contacts.splice(index, 1)\n      }\n  \n      resolve(contacts)\n    })\n  }\n  \n  function _updateContact(contact) {\n    return new Promise((resolve, reject) => {\n      const index = contacts.findIndex(c => contact._id === c._id)\n      if (index !== -1) {\n        contacts[index] = contact\n      }\n      resolve(contact)\n    })\n  }\n  \n  function _addContact(contact) {\n    return new Promise((resolve, reject) => {\n      contact._id = _makeId()\n      contacts.push(contact)\n      resolve(contact)\n    })\n  }\n  \n  function saveContact(contact) {\n    return contact._id ? _updateContact(contact) : _addContact(contact)\n  }\n  \n  function getEmptyContact() {\n    return {\n      name: '',\n      email: '',\n      phone: ''\n    }\n  }\n  \n  function _filter(regex) {\n      let filteredContacts = contacts\n\n      if(regex.name) filteredContacts = filteredContacts.filter(contact => regex.name.test(contact.name))\n      if(regex.email) filteredContacts = filteredContacts.filter(contact => regex.email.test(contact.email))\n      if(regex.phone) filteredContacts = filteredContacts.filter(contact => regex.phone.test(contact.phone))\n\n      return filteredContacts\n  }\n  \n  \n  \n  function _makeId(length = 10) {\n    var txt = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    for (var i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    return txt\n  }","import { contactService } from '../../services/contact.service.js'\n\nexport function loadContacts() {\n    return async (dispatch, getState) => {\n        const { filterBy } = getState().contactModule\n        try {\n            const contacts = await contactService.getContacts(filterBy)\n            dispatch({ type: 'SET_CONTACTS', contacts })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\nexport function getContactById(contactId) {\n    return async dispatch => {\n        const contact = await contactService.getContactById(contactId)\n        dispatch({ type: 'SET_CONTACT', contact })\n    }\n}\nexport function addContact(newContact) {\n    return async dispatch => {\n        const contact = await contactService.saveContact(newContact)\n        dispatch({ type: 'ADD_CONTACT', contact })\n    }\n}\nexport function updateContact(updatedContact) {\n    return async dispatch => {\n        const contact = await contactService.saveContact(updatedContact)\n        dispatch({ type: 'UPDATE_CONTACT', contact })\n    }\n}\nexport function removeContact(contactId) {\n    return async dispatch => {\n        await contactService.deleteContact(contactId)\n        dispatch({ type: 'REMOVE_CONTACT', contactId })\n    }\n}\nexport function setFilterBy(filterBy) {\n    \n    return dispatch => {\n        dispatch({ type: 'SET_FILTER_BY', filterBy })\n    }\n}","import React from \"react\"\nimport { connect } from 'react-redux'\n\nimport ContactList from '../cmps/ContactList.jsx'\nimport { Header } from \"../cmps/Header.jsx\"\nimport { loadContacts, setFilterBy } from '../store/actions/contactActions'\n\nclass _MisterBitcoin extends React.Component {\n\n    async componentDidMount(){\n        this.props.loadContacts()\n    }\n\n    onSelectContact(contact){\n        console.log(contact);\n    }\n\n    render () {\n        return (\n            <>\n                <Header \n                    loadContacts = { this.props.loadContacts }\n                    setFilterBy = { this.props.setFilterBy }/>\n                <div className=\"contact-list\">\n                    {\n                        this.props.contacts && <ContactList contacts={ this.props.contacts }/>\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contactModule.contacts,\n    }\n  }\n  \nconst mapDispatchToProps = {\n    loadContacts,\n    setFilterBy,\n}\n  \n// Connects the store with the component, injects it to the props\nexport const MisterBitcoin = connect(mapStateToProps, mapDispatchToProps)(_MisterBitcoin)","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getContactById, removeContact } from '../store/actions/contactActions.js'\n\nclass _ContactDetails extends Component {\n\n    async componentDidMount() {\n        const { id } = this.props.match.params\n        this.props.getContactById(id)\n    }\n    goBack = () => {\n        this.props.history.push('/')\n    }\n    editContact = () => {\n        this.props.history.push('/edit/' + this.props.match.params.id)\n    }\n    deleteContact = async () => {\n        const { id } = this.props.match.params\n        this.props.removeContact(id)\n        this.goBack()\n    }\n\n    render () {\n        const { contact } = this.props\n        if(!contact) return (<p>Loading...</p>)\n\n        const { name, email, phone } = contact\n        return (\n            <section className=\"contact-details\">\n                <img src={ 'http://robohash.org/' + contact._id } alt=\"\" />\n                <h1>{name}</h1>\n                <p>{email}</p>\n                <p>{phone}</p>\n                <section className=\"action-btns\">\n                    <button onClick={ this.goBack }>Back</button>\n                    <button onClick={ this.editContact }>Edit</button>\n                    <button onClick={ this.deleteContact }>x</button>\n                </section>\n            </section>\n         )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n      contact: state.contactModule.currContact,\n    //   loggedInUser: state.userModule.loggedInUser\n    }\n  }\n  const mapDispatchToProps = {\n    getContactById,\n    removeContact,\n  }\n  export const ContactDetails = connect(mapStateToProps, mapDispatchToProps)(_ContactDetails)","import React, { Component } from 'react'\nimport { contactService } from '../services/contact.service'\nimport { connect } from 'react-redux'\nimport { getContactById, addContact, updateContact } from '../store/actions/contactActions.js'\n\nclass _EditContact extends Component {\n\n    state = {\n        contact: null,\n    }\n    async componentDidMount() {\n        const { id } = this.props.match.params\n\n        if(id){\n            this.props.getContactById(id)\n            this.setState({ contact: this.props.contact })\n        } else {\n            const newContact = contactService.getEmptyContact()\n            this.setState({ contact: newContact })\n            console.log(newContact);\n        }\n        console.log(this.props);\n    }\n    handleChange = ({ target }) => {\n        const field = target.id\n        const value = target.value\n        this.setState(prevState => ({ contact: { ...prevState.contact, [field]: value }}))\n    }\n    saveContact = async (ev) => {\n        ev.preventDefault()\n\n        if(this.state.contact._id){\n            console.log('updating');\n            this.props.updateContact(this.state.contact)\n        } else {\n            console.log('adding');\n            this.props.addContact(this.state.contact)\n        }\n        this.props.history.push('/')\n    }\n    goBack = () => {\n        this.props.history.push('/')\n    }\n    render() {\n        const contact = this.state.contact\n        if(!contact) return (<p>Loading...</p>)\n\n        const { _id, name, email, phone } = contact\n        const imgUrl = _id ? _id : \"placeholder\"\n        return (\n            <form className=\"edit-contact\">\n                <img src={\"http://robohash.org/placeholder/\" + imgUrl} alt=\"\" />\n                <label htmlFor = { name }>name:\n                    <input value = { name } onChange={ this.handleChange } id=\"name\" type=\"text\" />\n                </label>\n                <label htmlFor = { email }>email:\n                    <input value = { email } onChange={ this.handleChange } id=\"email\" type=\"email\" />\n                </label>\n                <label htmlFor = { phone }>phone:\n                    <input value = { phone } onChange={ this.handleChange } id=\"phone\" type=\"text\" />\n                </label>\n                <section className=\"action-btns\">\n                    <button onClick = { this.goBack }>Back</button>\n                    <button onClick = { this.saveContact }>Save</button>\n                </section>\n            </form>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n      contact: state.contactModule.currContact,\n    //   loggedInUser: state.userModule.loggedInUser\n    }\n  }\n  const mapDispatchToProps = {\n    getContactById,\n    addContact,\n    updateContact,\n  }\n  export const EditContact = connect(mapStateToProps, mapDispatchToProps)(_EditContact)","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport { MisterBitcoin } from './pages/MisterBitcoin.jsx';\nimport { ContactDetails } from './pages/ContactDetails.jsx';\nimport { EditContact } from './pages/EditContact';\n\nfunction App() {\n\n    return (\n        <Router>\n            <main>\n                <Switch>\n                    <Route path=\"/contact/:id\" component={ContactDetails} />\n                    <Route path=\"/edit/:id?\" component={EditContact} />\n                    <Route path=\"/\" component={MisterBitcoin} />\n                </Switch>\n            </main>\n        </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n    contacts: [],\n    currContact: null,\n    filterBy: null\n}\nexport function contactReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'SET_CONTACTS':\n            return {\n                ...state,\n                contacts: action.contacts\n            }\n        case 'SET_CONTACT':\n            return {\n                ...state,\n                currContact: action.contact\n            }\n        case 'SET_FILTER_BY':\n            return {\n                ...state,\n                filterBy: action.filterBy\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [...state.contacts]\n            }\n        case 'REMOVE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.contactId)\n            }\n        case 'UPDATE_CONTACT':\n            const currContact = state.currContact._id === action.contact._id ? action.contact : state.currContact\n            return {\n                ...state,\n                contacts: state.contacts && state.contacts.map(contact => contact._id === action.contact._id ? action.contact : contact),\n                currContact\n            }\n        default:\n            return state\n    }\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { contactReducer } from './reducers/contactReducer';\n// import { userReducer } from './reducers/userReducer';\n\n// Connecting redux devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n// Combining reducers into one\nconst rootReducer = combineReducers({\n  contactModule: contactReducer,\n//   userModule: userReducer\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './scss/global.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n        <Provider store={ store }>\n            <App />\n        </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}